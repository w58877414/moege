<?php/** * Created by PhpStorm. * User: 78742 * Date: 2017/2/11 0011 * Time: 15:48 */namespace moe\controller;require_once 'moe_core/Controller.php';class Moe extends \moe\core\Controller{    /**     * @var \moe\model\MoeModel     */    public $model;    public $typelist;    public $data;    public $mid;    public function __construct()    {        parent::__construct('MoeModel','Moe');        session_start();        if (count($_POST) > 0){            $_POST = $this->form_arr_filter($_POST)?:$this->error_back('存在非法字符！');        }        $ginfo = $_GET['v'];        if(stripos($ginfo,'upd')===false || stripos($ginfo,'add')===false || stripos($ginfo,'del')===false || stripos($ginfo,'log')===false || stripos($ginfo,'sig')===false){            $this->typelist = $this->model->typeAll();        }        /* 用户页左侧栏信息获取，除memberImg页 */        $mleftinfo = ['member','memberImglist','memberImglistf','memberFollow','memberFollowF','memberTaglist'];        if(in_array($_GET['v'],$mleftinfo)===true){            $this->mid = $this->model->member_check();            $this->data['minfo'] = $this->model->member_info($this->mid);            $this->data['follow'] = $this->model->member_follow_some($this->mid, 10);            $this->data['followF'] = $this->model->member_follow_some($this->mid, 10, true);            $this->data['tag'] = $this->model->member_tag_some($this->mid, 20);        }    }    public function login()    {        if(!empty($_SESSION['m_id'])){            $this->succeed_href('登陆成功','./');        }        $data['title'] = '格萌网用户登陆';        $this->useView('login',$data);    }    public function logging()    {        $username = $_POST['username']?: $this->error_back('非法访问');        $pass = $_POST['pass'];        $salt = $this->model->login_username($username)?: $this->error_back($this->gset['user_nosearch']);        $info = $this->model->logging($username, $pass, $salt);        if($info){            $_SESSION['m_id'] = $info['m_id'];            $_SESSION['m_name'] = $info['m_name'];            $_SESSION['m_nickname'] = $info['m_nickname'];            $_SESSION['m_head'] = $info['m_head'];            $this->succeed_href('登陆成功','./');        }else{            $this->error_back('密码不正确');        }    }    public function logout()    {        if(session_destroy()){            $this->succeed_href('注销登陆成功','?v=login');        }else {            $this->error_back('注销登陆失败');        }    }    public function signup()    {        $data['title'] = '萌格网用户注册';        $this->useView('signup',$data);    }    public function signuping()    {        $nickname = $_POST['nickname']?: $this->error_back('非法访问');        $username = $_POST['username'];        $pass = $_POST['pass1'];        $this->form_str_username($username)?: $this->error_back($this->gset['user_err']);        $this->model->member_name_same($username)===0 ? : $this->error_back($this->gset['user_same']);        $this->form_str_password($pass)?: $this->error_back($this->gset['pass_err']);        (strcasecmp($_SESSION['imgcode'], $_POST['imgcode'])==0)?: $this->error_back('验证码不正确');        if($this->model->signup($nickname, $username, $pass)){            $_SESSION['imgcode'] = '';            $salt = $this->model->login_username($username)?: $this->error_back($this->gset['user_nosearch']);            $info = $this->model->logging($username, $pass, $salt);            $_SESSION['m_id'] = $info['m_id'];            $_SESSION['m_name'] = $info['m_name'];            $_SESSION['m_nickname'] = $info['m_nickname'];            $_SESSION['m_head'] = $info['m_head'];            $this->succeed_href('注册成功','?v=member');        }else{            $this->error_back('注册失败');        }    }    public function imgCode()    {        require_once 'moe_core/imgCode.php';        $imgCode = new \moe\core\imgCode(120, 36, 18, 'imgcode');        $imgCode->getImg();    }    public function index()    {        $data['title'] = ''.WEBSITE;        $data['follow'] = $this->model->member_follow_some($_SESSION['m_id'], 10);        $data['followF'] = $this->model->member_follow_some($_SESSION['m_id'], 10, true);        $data['pushuser'] = $this->model->indexpushuser();        $data['group'] = $this->model->indexgroup($_SESSION['m_id']);        $data['pushgroup'] = $this->model->indexpushgroup();        $data['notice'] = $this->model->indexnotice();        $data['newimg'] = $this->model->indexnewimg();        $data['shareimg'] = $this->model->indexshareimg();        $data['favoriteimg'] = $this->model->indexfavoriteimg($_SESSION['m_id']);        $data['weekgradesrank'] = $this->model->indexrank('weekgrades');        $data['tag'] = $this->model->indextag();        $data['daytimesrank'] = $this->model->indexrank('daytime');        $data['weektimesrank'] = $this->model->indexrank('weektime');        $data['daygraderank'] = $this->model->indexrank('daygrade');        $data['weekgraderank'] = $this->model->indexrank('daygrades');        $this->useView('top',$data);        $this->useView('index',$data);        $this->useView('bottom');    }    public function pic()    {        $data['title'] = '作品列表'.WEBSITE;        $p = $_GET['p'] ? $_GET['p'] : 1;        $order = $_GET['o'] ? $_GET['o'] : null;        $tid = $_GET['tid'] ? $_GET['tid'] : null;        $tyid = $_GET['tyid'] ? $_GET['tyid'] : null;        $search = $_GET['search']? $_GET['search'] : null;        $data['imglist'] = $this->model->piclist($data['pages'], 'p', $p, 40, $search, $order, $tid, $tyid);        $this->useView('top',$data);        $this->useView('pic_list',$data);        $this->useView('bottom');    }    /* 删除收藏功能也涵盖在内 */    public function picDel()    {        $mid = $_SESSION['m_id']?: $this->error_back('请先登陆');        $pid = $_GET['pid']?:$this->error_back('ID为空！');        if($this->model->member_pic_is($mid,$pid)){            $str = $this->model->member_pic_del($pid);            if ($str===true){                $this->succeed_href('删除图片成功');            }else{                $this->error_back($str);            }        }elseif($this->model->member_favorite_is($mid,$pid)){            if ($this->model->member_favorite_del($mid,$pid)){                $this->succeed_href('取消收藏成功');            }else{                $this->error_back('取消收藏失败');            }        }else{            $this->error_back('非法操作');        }    }    public function notice()    {        $nid = $_GET['nid']?: $this->error_back('非法访问');        $data['notice'] = $this->model->notice($nid);        $data['title'] = $data['notice']['title'].'-公告-'.WEBSITE;        $this->useView('top',$data);        $this->useView('notice',$data);        $this->useView('bottom');    }    public function tougao()    {        $mid = $_SESSION['m_id']?: $this->succeed_href('请先登陆','?v=login');        $data['title'] = '-投稿-'.WEBSITE;        $this->useView('top',$data);        $this->useView('tougao',$data);        $this->useView('bottom');    }    public function tougaoing()    {        if ($_FILES['pic_file']['error'] > 0){            $this->error_back('请上传作品！');        }else{            $mid = $_SESSION['m_id']?: $this->succeed_href('请先登陆','?v=login');            $picname = (!empty($_POST['picname']))?$_POST['picname']: $this->error_back('作品名不能为空');            (strlen($picname) < $this->gset['picname_len'])?:$this->error_back($this->gset['picname_err']);            $picinfo = (!empty($_POST['picinfo']))?$_POST['picinfo']: $this->error_back('作品简介不能为空');            $pictype = (!empty($_POST['pictype']))?$_POST['pictype']: $this->error_back('分类不能为空');            $pictool = $_POST['pictool'];            $pictag = $_POST['pictag'];            require_once 'moe_core/imgGD.php';            $imgupload = new \moe\core\imgGD($_FILES['pic_file']['name'],$_FILES['pic_file']['type'],$_FILES['pic_file']['size'],$_FILES['pic_file']['tmp_name']);            $imgdata_bsrc = $imgupload->alterImgsize_max(700);            $imgdata_ssrc = $imgupload->alterImgsize_max(200);            $picsrc = $imgupload->moveImgdataforjpeg(DEFALUT_UPPIC.'/'.$mid, null, null, null, 95)?: $this->error_back($this->gset['img_uploaderr']);            $picbsrc = $imgupload->moveImgdataforjpeg(DEFALUT_UPPIC.'/'.$mid, $imgdata_bsrc, '_b', true)?: $this->error_back($this->gset['img_uploaderr']);            $picssrc = $imgupload->moveImgdataforjpeg(DEFALUT_UPPIC.'/'.$mid, $imgdata_ssrc, '_s', true)?: $this->error_back($this->gset['img_uploaderr']);            $pid = $this->model->member_tougao($picname,$picinfo,$pictype,$pictool,$picsrc,$picbsrc,$picssrc,$mid)?: $this->error_back($this->gset['投稿失败']);            $result = $this->model->pic_tag_addarr($pid, $pictag);            if($result == ''){                $this->succeed_href('作品投稿成功，请等待审核。','?v=memberImg&pid='.$pid);            }else{                $this->error_back('作品投稿成功，标签'.$result.'添加失败');            }        }    }    public function member()    {        $data = $this->data;        $mid = $this->mid;        $data['imgsome'] = $this->model->member_pic_some($mid, 3);        $data['fimgsome'] = $this->model->member_pic_some($mid, 3, true);        $data['title'] = $data['minfo']['m_nickname'].'-个人主页-'.WEBSITE;        $this->useView('top',$data);        $this->useView('member_main',$data);        $this->useView('bottom');    }    public function memberUpd()    {        if (isset($_SESSION['m_id'])){            $mid = (int)$_SESSION['m_id'];            $mnickname = $_POST['m_nickname']?: $this->error_back($this->gset['nickname_null']);            $this->form_str_nickname($mnickname)?: $this->error_back($this->gset['nickname_err']);            $mgender = in_array($_POST['m_gender'], $this->gset['gender_arr'])?$_POST['m_gender']: $this->error_back($this->gset['gender_err']);            $mbirthday = $this->date_format_check($_POST['m_birthday'])? $_POST['m_birthday'] : $this->error_back($this->gset['birthday_err']);            $mjob = (strlen($_POST['m_job']) < $this->gset['job_len'])? $_POST['m_job'] : $this->error_back($this->gset['job_err']);            $maddress = (strlen($_POST['m_address']) < $this->gset['address_len'])? $_POST['m_address'] : $this->error_back($this->gset['address_err']);            $memail = $this->form_str_email($_POST['m_email'])? $_POST['m_email'] : $this->error_back($this->gset['email_err']);            $mqq = ((is_numeric($_POST['m_qq']) || $_POST['m_qq']=='') && strlen($_POST['m_qq']) < $this->gset['qq_len'])? $_POST['m_qq'] : $this->error_back($this->gset['qq_err']);            $mtool = (strlen($_POST['m_tool']) < $this->gset['tool_len']) ? $_POST['m_tool'] :  $this->error_back($this->gset['tool_err']);            $mtag = (strlen($_POST['m_tag']) < $this->gset['usertag_len']) ? $_POST['m_tag'] :  $this->error_back($this->gset['usertag_err']);            $minfo = (strlen($_POST['m_info']) < $this->gset['userinfo_len']) ? $_POST['m_info'] :  $this->error_back($this->gset['userinfo_err']);            if ($this->model->memberUpd($mid, $mnickname, $mgender, $mbirthday, $mjob, $maddress, $memail, $mqq, $mtool, $mtag, $minfo)){                $_SESSION['m_nickname'] = $mnickname;                $this->succeed_href('修改用户信息成功');            }else{                $this->error_back('修改用户信息失败！');            }        }else{            $this->error_back('非法访问！');        }    }    public function memberList()    {        $data['title'] = '作品列表'.WEBSITE;        $p = $_GET['p'] ? $_GET['p'] : 1;        $search = $_GET['search']? $_GET['search'] : null;        $gid = $_GET['gid']? $_GET['gid'] : null;        $data['memberlist'] = $this->model->memberlist($data['pages'], 'p', $p, 10, $search, $gid);        $this->useView('top',$data);        $this->useView('member_list',$data);        $this->useView('bottom');    }    public function memberImglist()    {        $data = $this->data;        $mid = $this->mid;        $p = $_GET['p'] ? $_GET['p'] : 1;        $order = $_GET['o'] ? $_GET['o'] : null;        $tid = $_GET['tid'] ? $_GET['tid'] : null;        $tyid = $_GET['tyid'] ? $_GET['tyid'] : null;        $search = $_GET['search']? $_GET['search'] : null;        $data['imglist'] = $this->model->piclist($data['pages'], 'p', $p, 12, $search, $order, $tid, $tyid, $mid);        $data['title'] = $data['minfo']['m_nickname'].'-作品页-'.WEBSITE;        $this->useView('top',$data);        $this->useView('member_imglist',$data);        $this->useView('bottom');    }    public function memberImglistf()    {        $data = $this->data;        $mid = $this->mid;        $p = $_GET['p'] ? $_GET['p'] : 1;        $order = $_GET['o'] ? $_GET['o'] : null;        $tid = $_GET['tid'] ? $_GET['tid'] : null;        $tyid = $_GET['tyid'] ? $_GET['tyid'] : null;        $search = $_GET['search']? $_GET['search'] : null;        $data['imglist'] = $this->model->piclist($data['pages'], 'p', $p, 12, $search, $order, $tid, $tyid, $mid, true);        $data['title'] = $data['minfo']['m_nickname'].'-收藏页-'.WEBSITE;        $this->useView('top',$data);        $this->useView('member_imglist',$data);        $this->useView('bottom');    }    public function memberImg()    {        $pid = $_GET['pid']?: $this->error_back('非法访问');        $data['pinfo'] = $this->model->picinfo($pid)?$this->model->picinfo($pid):$this->error_back('作品不存在或未审核');;        $data['follow'] = $this->model->member_follow_some($data['pinfo']['m_id'], 10);        $data['followF'] = $this->model->member_follow_some($data['pinfo']['m_id'], 10, true);        $data['tag'] = $this->model->member_tag_some($data['pinfo']['m_id'], 20);        $data['psize'] = getimagesize($data['pinfo']['pic_src']);        $data['minfo'] = $this->model->member_info_some($data['pinfo']['m_id']);        $data['type'] = $this->model->type_id_name($data['pinfo']['pic_typeid']);        $data['prev'] = $this->model->member_pic_prev($data['pinfo']['m_id'],$pid);        $data['next'] = $this->model->member_pic_next($data['pinfo']['m_id'],$pid);        $data['pictag'] = $this->model->pic_taglist($data['pinfo']['pic_id']);        $data['title'] = $data['picinfo']['pic_name'].''.WEBSITE;        $data['grade'] = $_SESSION['m_id']?$this->model->member_pic_grade($pid, $_SESSION['m_id']):0;        $this->useView('top',$data);        $this->useView('member_img',$data);        $this->useView('bottom');        $this->model->pic_times_add($data['pinfo']);    }    public function memberImgGrade()    {        if($_SESSION['m_id']){            $mid = $_SESSION['m_id'];        }else{            echo '登陆后才允许评价';exit(0);        }        if($_GET['pid']){            $pid = $_GET['pid'];        }else{            echo '非法访问';exit(0);        }        if($this->model->member_pic_grade($pid, $mid)!=0){            echo '每天只能对同一作品评分一次';exit(0);        }        $grade = $_GET['grade'];        if($this->model->member_pic_grade_add($pid, $mid, $grade)){            echo '评分成功';        }else{            echo '评分失败';        }    }    public function memberFollow()    {        $data = $this->data;        $mid = $this->mid;        $p = $_GET['p'] ? $_GET['p'] : 1;        $data['mlist'] = $this->model->member_follow($data['pages'], 'p', $p, 20, $mid);        $data['title'] = $data['minfo']['m_nickname'].'-关注列表-'.WEBSITE;        $data['titlef'] = '关注';        $this->useView('top',$data);        $this->useView('member_follow',$data);        $this->useView('bottom');    }    public function memberFollowF()    {        $data = $this->data;        $mid = $this->mid;        $p = $_GET['p'] ? $_GET['p'] : 1;        $data['mlist'] = $this->model->member_follow($data['pages'], 'p', $p, 20, $mid, true);        $data['title'] = $data['minfo']['m_nickname'].'-粉丝列表-'.WEBSITE;        $data['titlef'] = '粉丝';        $this->useView('top',$data);        $this->useView('member_follow',$data);        $this->useView('bottom');    }    public function memberTaglist()    {        $data = $this->data;        $mid = $this->mid;        $data['tlist'] = $this->model->member_taglist($mid);        $data['title'] = $data['minfo']['m_nickname'].'-作品页-'.WEBSITE;        $this->useView('top',$data);        $this->useView('member_taglist',$data);        $this->useView('bottom');    }    public function memberUpdhead()    {        if ($_FILES['mhead1']['error'] > 0){            $this->error_back('非法访问！'.$_FILES['mhead1']['error']);        }else{            ($_FILES['mhead1']['size'] <= $this->gset['head_sizemax']*1024) ?: $this->error_back($this->gset['head_sizeerr']);            $mid = (int)$_SESSION['m_id']?:$this->error_back('非法操作');            $headS = abs((int)$_POST['headS']);            $headW = abs((int)$_POST['headW']);            $headH = abs((int)$_POST['headH']);            $headT = abs((int)$_POST['headT']);            $headL = abs((int)$_POST['headL']);            require_once 'moe_core/imgGD.php';            $imgupload = new \moe\core\imgGD($_FILES['mhead1']['name'],$_FILES['mhead1']['type'],$_FILES['mhead1']['size'],$_FILES['mhead1']['tmp_name']);            $imgdata = $imgupload->alterImgsize($headW,$headH);            $imgdata = $imgupload->clippingImg($headL,$headT,$headS,$headS,$imgdata);            $imghead = $imgupload->moveImgdataforjpeg(DEFALUT_UPHEAD,$imgdata,$mid)?: $this->error_back($this->gset['img_uploaderr']);            if($this->model->memberUpdHead($mid, $imghead)){                $_SESSION['m_head'] = $this->model->member_id_head($_SESSION['m_id']);                $this->succeed_href($this->gset['head_sqlsuc']);            }else{                $this->error_back($this->gset['head_sqlerr']);            }        }    }    public function followAdd()    {        $mid = $_SESSION['m_id']?: $this->error_back('请先登陆');        $fmid = $_GET['mid']?: $this->error_back('ID不能为空');        if($this->model->member_follow_add($mid, $fmid)){            $this->succeed_href('关注成功');        }else{            $this->error_back('关注失败');        }    }    public function followDel()    {        $mid = $_SESSION['m_id']?: $this->error_back('请先登陆');        $fmid = $_GET['fmid']?:$this->error_back('ID为空！');        if($this->model->member_follow_is($mid, $fmid)){            if ($this->model->member_follow_del($mid, $fmid)){                $this->succeed_href('取消关注成功');            }else{                $this->error_back('取消关注失败');            }        }elseif($this->model->member_follow_is($fmid, $mid)){            if ($this->model->member_follow_del($fmid, $mid)){                $this->succeed_href('删除粉丝成功');            }else{                $this->error_back('删除粉丝失败');            }        }else{            $this->error_back('非法操作');        }    }    public function favoriteAdd()    {        $mid = $_SESSION['m_id']?: $this->error_back('请先登陆');        $pid = $_GET['pid']?: $this->error_back('ID不能为空');        if($this->model->member_favorite_add($mid, $pid)){            $this->succeed_href('收藏成功');        }else{            $this->error_back('收藏失败');        }    }    public function tag()    {        $data['title'] = '标签索引'.WEBSITE;        $p = $_GET['p'] ? $_GET['p'] : 1;        $search = $_GET['search']? $_GET['search'] : null;        $data['taglist'] = $this->model->tag_list($data['pages'], 'p', $p, 200, $search);        $this->useView('top',$data);        $this->useView('tag_list',$data);        $this->useView('bottom');    }    public function tagAdd()    {        $pid = $_GET['pid']?: $this->error_back("非法访问");        ($this->model->pic_tag_num($pid))<10?: $this->error_back("标签数量超限，请谨慎添加");        $tagname = $_POST['tagname'];        if($this->model->pic_tag_add($pid, $tagname)){            $this->succeed_href('添加标签成功');        }else{            $this->error_back('添加标签失败');        }    }    public function group()    {        $gid = $_GET['gid']?:$this->error_back('非法访问');        $data['title'] = '-群组页面-'.WEBSITE;        $data['ginfo'] = $this->model->groupinfo($gid);        $data['mlist'] = $this->model->group_member_some($gid);        $this->useView('top',$data);        $this->useView('group_main',$data);        $this->useView('bottom');    }    public function groupList()    {        $data['title'] = '群组列表-'.WEBSITE;        $p = $_GET['p'] ? $_GET['p'] : 1;        $search = $_GET['search']? $_GET['search'] : null;        $data['grouplist'] = $this->model->grouplist($data['pages'], 'p', $p, 10, $search);        $this->useView('top',$data);        $this->useView('group_list',$data);        $this->useView('bottom');    }    public function groupAdd()    {        $mid = $_SESSION['m_id']?:$this->error_back('请先登陆');        if($_GET['gid']){            $gid = $_GET['gid'];        }else{            echo '非法访问';exit(0);        }        if($this->model->group_add($mid, $gid)){            echo '加入成功';exit(0);        }else{            echo '加入失败';exit(0);        }    }    public function groupDel()    {        $mid = $_SESSION['m_id']?:$this->error_back('请先登陆');        if($_GET['gid']){            $gid = $_GET['gid'];        }else{            echo '非法访问';exit(0);        }        if($this->model->group_del($mid, $gid)){            echo '退出成功';exit(0);        }else{            echo '退出失败';exit(0);        }    }}